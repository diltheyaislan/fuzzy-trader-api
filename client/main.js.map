{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.api.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/guards/authenticated.guard.ts","./src/app/core/guards/guest.guard.ts","./src/app/core/interceptors/token.interceptor.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/companies.service.ts","./src/app/core/services/cryptocurrencies.service.ts","./src/app/core/services/investment-portfolio.service.ts","./src/app/core/services/notification.service.ts","./src/app/core/services/token.service.ts","./src/app/core/services/transactions.service.ts","./src/app/core/services/users.service.ts","./src/app/modules/dashboard/components/portfolio-asset/portfolio-asset.component.ts","./src/app/modules/dashboard/components/portfolio-asset/portfolio-asset.component.html","./src/app/modules/dashboard/pages/dashboard/dashboard.component.ts","./src/app/modules/dashboard/pages/dashboard/dashboard.component.html","./src/app/modules/sessions/pages/login/login.component.ts","./src/app/modules/sessions/pages/login/login.component.html","./src/app/modules/sessions/pages/logout/logout.component.ts","./src/app/modules/sessions/pages/logout/logout.component.html","./src/app/modules/sessions/pages/register/register.component.ts","./src/app/modules/sessions/pages/register/register.component.html","./src/app/modules/transactions/components/investment-asset/investment-asset.component.ts","./src/app/modules/transactions/components/investment-asset/investment-asset.component.html","./src/app/modules/transactions/pages/new-transaction/new-transaction.component.ts","./src/app/modules/transactions/pages/new-transaction/new-transaction.component.html","./src/app/shared/angular-material.module.ts","./src/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/shared/layout/content/content.component.ts","./src/app/shared/layout/content/content.component.html","./src/app/shared/layout/header/header.component.ts","./src/app/shared/layout/header/header.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GuestGuard } from './core/guards/guest.guard';\nimport { AuthenticatedGuard } from './core/guards/authenticated.guard';\n\nimport { ContentComponent } from './shared/layout/content/content.component';\nimport { LoginComponent } from './modules/sessions/pages/login/login.component';\nimport { LogoutComponent } from './modules/sessions/pages/logout/logout.component';\nimport { RegisterComponent } from './modules/sessions/pages/register/register.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { NewTransactionComponent } from './modules/transactions/pages/new-transaction/new-transaction.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContentComponent,\n    canLoad: [AuthenticatedGuard], canActivate: [AuthenticatedGuard],\n    children: [\n      { path: '', component: DashboardComponent, data: { title: 'Dashboard' } },\n      { path: 'transactions/buy', component: NewTransactionComponent, data: { title: 'New Investment' } },\n    ]\n  },\n\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { title: 'Register' },\n    canLoad: [GuestGuard], canActivate: [GuestGuard],\n  },\n\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { title: 'Login' },\n    canLoad: [GuestGuard], canActivate: [GuestGuard],\n  },\n\n  {\n    path: 'logout',\n    component: LogoutComponent,\n    canLoad: [AuthenticatedGuard], canActivate: [AuthenticatedGuard],\n  },\n\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { environment } from '../environments/environment';\r\n\r\nexport const BACKEND_API = environment.api;\r\n\r\nexport const BACKEND_WEB = environment.web;\r\n\r\nexport const PRODUCTION = environment.production;\r\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fuzzy Trader';\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title\n  ) {\n    this.titleService.setTitle(this.title)\n  }\n\n  ngOnInit() {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map((route) => {\n          while (route.firstChild) route = route.firstChild\n          return route\n        }),\n        map((route) => {\n          while (route.firstChild) route = route.firstChild\n          return route\n        }),\n        filter((route) => route.outlet === 'primary'),\n        mergeMap((route) => route.data)\n      )\n      .subscribe((event) => this.titleService.setTitle(`${event['title']} | ${this.title}`))\n  }\n}\n","<div fxLayout=\"column\">\n  <app-header></app-header>\n\n  <main fxFlex=\"grow\">\n    <router-outlet></router-outlet>\n  </main>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AngularMaterialModule } from './shared/angular-material.module';\n\nimport { TokenInterceptor } from './core/interceptors/token.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { AppComponent } from './app.component';\n\nimport { ContentComponent } from './shared/layout/content/content.component';\nimport { HeaderComponent } from './shared/layout/header/header.component';\nimport { ConfirmationDialogComponent } from './shared/components/confirmation-dialog/confirmation-dialog.component';\n\nimport { LoginComponent } from './modules/sessions/pages/login/login.component';\nimport { LogoutComponent } from './modules/sessions/pages/logout/logout.component';\nimport { RegisterComponent } from './modules/sessions/pages/register/register.component';\nimport { DashboardComponent } from './modules/dashboard/pages/dashboard/dashboard.component';\nimport { NewTransactionComponent } from './modules/transactions/pages/new-transaction/new-transaction.component';\nimport { InvestmentAssetComponent } from './modules/transactions/components/investment-asset/investment-asset.component';\nimport { PortfolioAssetComponent } from './modules/dashboard/components/portfolio-asset/portfolio-asset.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    HeaderComponent,\n    ConfirmationDialogComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegisterComponent,\n    DashboardComponent,\n    NewTransactionComponent,\n    InvestmentAssetComponent,\n    PortfolioAssetComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    AngularMaterialModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticatedGuard implements CanActivate, CanLoad {\n\n  constructor( private authService: AuthService ) { }\n\n  private checkAuthentication(path: string): boolean {\n    const loggedIn = this.authService.isLoggedIn();\n\n    if (!loggedIn) {\n      this.authService.logout();\n      this.authService.redirect(path);\n    }\n\n    return loggedIn;\n  }\n\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkAuthentication(route.path);\n  }\n\n  canActivate(\n    activatedRoute: ActivatedRouteSnapshot,\n    routerState: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkAuthentication(routerState.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.checkAuthentication(next.routeConfig.path)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate, CanActivateChild, CanLoad {\n\n  constructor(private authService: AuthService) { }\n\n  checkAuthentication(): boolean {\n    const loggedIn = this.authService.isLoggedIn();\n    return !loggedIn;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAuthentication();\n  }\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAuthentication();\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkAuthentication();\n  }\n}\n","import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable, Injector } from '@angular/core';\r\n\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private injector: Injector) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const authService = this.injector.get(AuthService);\r\n\r\n        if (authService.isLoggedIn()) {\r\n            const authRequest = request.clone(\r\n                { setHeaders: { 'Authorization': `Bearer ${authService.user().accessToken}` } }\r\n            );\r\n            return next.handle(authRequest);\r\n        } else {\r\n            return next.handle(request);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap, filter } from 'rxjs/operators';\n\nimport { BACKEND_API } from '../../app.api';\nimport { TokenService } from './token.service';\nimport UserSession from '../../shared/models/user-session.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private userLoggedIn: UserSession;\n\n  private permissions: string[];\n\n  private lastUrl: string;\n\n  constructor(\n    private token: TokenService,\n    private http: HttpClient,\n    private router: Router) {\n    this.router.events\n      .pipe(filter(e => e instanceof NavigationEnd))\n      .subscribe((e: NavigationEnd) => this.lastUrl = e.url);\n  }\n\n  validateSession() {\n    let user = this.user();\n\n    if (user !== undefined) {\n      let validToken = this.token.isValid(this.userLoggedIn.accessToken, true);\n      if (!validToken && this.token.payload(this.userLoggedIn.accessToken).rememberme !== 'true') {\n        this.logout();\n        this.redirect('/');\n      }\n    }\n  }\n\n  isLoggedIn(): boolean {\n    const isLoggenIn = this.user() !== undefined && this.token.isValid(this.user().accessToken, false);\n    return isLoggenIn;\n  }\n\n  user(): UserSession {\n    let userLocalStorage: UserSession = JSON.parse(this.get());\n    if (!!(userLocalStorage)) {\n      this.userLoggedIn = userLocalStorage;\n    }\n\n    if (this.userLoggedIn && this.permissions !== undefined) {\n      this.userLoggedIn.permissions = this.permissions;\n    }\n\n    return this.userLoggedIn;\n  }\n\n  setPermissions(permissions: string[] = []): void {\n    this.permissions = permissions;\n  }\n\n  login(email: string, password: string,): Observable<any> {\n    return this.http.post<any>(`${BACKEND_API}/sessions`,\n      { email: email, password: password })\n      .pipe(tap(data => this.handleLoginResponse(data)));\n  }\n\n  logout() {\n    this.userLoggedIn = undefined;\n    this.token.remove();\n    this.remove();\n  }\n\n  set(user: UserSession) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n  }\n\n  get() {\n    return localStorage.getItem('currentUser');\n  }\n\n  remove() {\n    localStorage.removeItem('currentUser');\n  }\n\n  redirect(path: string = this.lastUrl) {\n    if (path === '/' || path === '' || path === undefined) {\n      this.router.navigate(['/login']);\n    } else {\n      this.router.navigate(['/login', path]);\n    }\n  }\n\n  handleLoginResponse(data) {\n    this.userLoggedIn = {\n      'id': data.user.id,\n      'name': data.user.name,\n      'firstName': data.user.name.split(' ')[0],\n      'email': data.user.email,\n      'accessToken': data.token\n    }\n\n    this.set(this.userLoggedIn);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BACKEND_API } from 'src/app/app.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompaniesService {\n\n  constructor(private http: HttpClient) { }\n\n  all(): Observable<any>{\n    return this.http.get<any>(`${BACKEND_API}/companies`, {});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BACKEND_API } from 'src/app/app.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CryptocurrenciesService {\n\n  constructor(private http: HttpClient) { }\n\n  all(): Observable<any>{\n    return this.http.get<any>(`${BACKEND_API}/cryptocurrencies`, {});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BACKEND_API } from 'src/app/app.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvestmentPortfolioService {\n\n  constructor(private http: HttpClient) { }\n\n  show(): Observable<any>{\n    return this.http.get<any>(`${BACKEND_API}/investment-portfolio`, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  notify(message: string, action: string = 'Close') {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor() { }\n\n  handle(token) {\n    this.set(token);\n  }\n\n  set(token) {\n    localStorage.setItem('token', token);\n  }\n\n  get() {\n    return localStorage.getItem('token');\n  }\n\n  remove() {\n    localStorage.removeItem('token');\n  }\n\n  isValid(token, expiration: boolean = false) {\n    if (token) {\n      const payload = this.payload(token);\n\n      if (payload) {\n        if (expiration) {\n          if (Date.now() < payload.nbf * 1000) {\n            return false;\n          }\n\n          if (Date.now() > payload.exp * 1000) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n    return false;\n  }\n\n  payload(token) {\n    const payload = token.split('.')[1];\n    return this.decode(payload);\n  }\n\n  decode(payload) {\n    return JSON.parse(atob(payload));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BACKEND_API } from 'src/app/app.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionsService {\n\n  constructor(private http: HttpClient) { }\n\n  all(): Observable<any>{\n    return this.http.get<any>(`${BACKEND_API}/transactions`, {});\n  }\n\n  buyShares(company_id: string, amount: number): Observable<any> {\n    return this.http.post<any>(`${BACKEND_API}/transactions`, {\n      company_id,\n      amount,\n    });\n  }\n\n  buyCryptocurrencies(cryptocurrency_id: string, amount: number): Observable<any> {\n    return this.http.post<any>(`${BACKEND_API}/transactions`, {\n      cryptocurrency_id,\n      amount,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { BACKEND_API } from 'src/app/app.api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) { }\n\n  all(): Observable<any>{\n    return this.http.get<any>(`${BACKEND_API}/users`, {});\n  }\n\n  store(name: string, email: string, password: string): Observable<any> {\n    return this.http.post<any>(`${BACKEND_API}/users`, {\n      'name': name,\n      'email': email,\n      'password': password\n    });\n  }\n\n  update(id: string, name: string, email: string, password: string): Observable<any> {\n\n    const data: any = {\n      'name': name,\n      'email': email,\n      'password': password\n    };\n\n    if (!password) {\n       delete data.password;\n    }\n\n    return this.http.patch<any>(`${BACKEND_API}/users/${id}`, data);\n  }\n\n  show(id: string): Observable<any> {\n    return this.http.get<any>(`${BACKEND_API}/users/${id}`);\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete<any>(`${BACKEND_API}/users/${id}`);\n  }\n\n  changePassword(id: string, currentPassword: string, newPassword: string){\n    return this.http.patch<any>(`${BACKEND_API}/profile`, {\n      'old_password': currentPassword,\n      'password': newPassword,\n      'password_confirmation': newPassword,\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-portfolio-asset',\n  templateUrl: './portfolio-asset.component.html',\n  styleUrls: ['./portfolio-asset.component.css']\n})\nexport class PortfolioAssetComponent implements OnInit {\n\n  @Input()\n  id: string;\n\n  @Input()\n  name: string;\n\n  @Input()\n  logoUrl: string;\n\n  @Input()\n  symbol: string;\n\n  @Input()\n  quantity: number;\n\n  @Input()\n  price: number;\n\n  @Input()\n  amount: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"asset-wrapper\">\n  <div class=\"asset-content\">\n    <div class=\"asset-image-wrapper\">\n      <img class=\"asset-logo\" src=\"{{ logoUrl }}\">\n    </div>\n\n    <div class=\"asset-info-wrapper\">\n      <span class=\"asset-name\"><strong>{{ name }}</strong> ({{ symbol }})</span>\n\n      <div class=\"asset-info\">\n        <strong>Price:</strong>&nbsp;<span class=\"asset-price\">{{ price | currency }}</span><br>\n        <strong>Quantity:</strong>&nbsp;<span class=\"asset-price\">{{ quantity | number: '1.4-4' }}</span><br>\n        <strong>Amount:</strong>&nbsp;<span class=\"asset-price\">{{ amount | currency }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NotificationService } from 'src/app/core/services/notification.service';\nimport { InvestmentPortfolioService } from 'src/app/core/services/investment-portfolio.service';\n\nimport CompanyModel from 'src/app/shared/models/company.model';\nimport CryptocurrencyModel from 'src/app/shared/models/cryptocurrency.model';\nimport InvestmentPortfolioModel from 'src/app/shared/models/investment-portfolio.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public processing: boolean = false;\n\n  public portfolio: InvestmentPortfolioModel;\n\n  constructor(\n    private investmentPortfolioService: InvestmentPortfolioService,\n    private notificationService: NotificationService) { }\n\n  ngOnInit(): void {\n    this.loadInvestmentPortfolio();\n  }\n\n  loadInvestmentPortfolio() {\n    this.processing = true;\n\n    this.investmentPortfolioService.show()\n      .subscribe(\n        success => this.handleSuccess(success),\n        error => this.handleError(error)\n      );\n  }\n\n  private handleSuccess(response) {\n    this.processing = false;\n    this.portfolio = response;\n  }\n\n  private handleError(response) {\n    this.processing = false;\n    const msg = response.error.message;\n    this.notificationService.notify(`An error has occurred: ${msg}`);\n  }\n}\n","<mat-card class=\"content-card content-card-with-actions\">\n  <mat-card-header fxLayoutAlign=\"space-between\">\n    <div mat-card-avatar class=\"avatar\">\n      <mat-icon>account_balance_wallet</mat-icon>\n    </div>\n    <div fxFlex=\"grow\">\n      <mat-card-title>My Investment Portfolio</mat-card-title>\n      <mat-card-subtitle>See all assets</mat-card-subtitle>\n    </div>\n\n    <div>\n      <button mat-button routerLink=\"/transactions/buy\" routerLinkActive=\"active\">\n        <mat-icon>attach_money</mat-icon>\n        <span>New investment</span>\n      </button>\n    </div>\n  </mat-card-header>\n  <mat-card-content>\n    <div *ngIf=\"!processing\" class=\"content\">\n\n      <div *ngIf=\"portfolio\" class=\"amount-investment\">\n        Amount: {{ portfolio.amount | currency }}\n      </div>\n\n      <mat-tab-group mat-align-tabs=\"start\">\n\n        <mat-tab label=\"Shares\">\n          <div *ngIf=\"portfolio?.shares.length > 0\" class=\"assets-wrapper\">\n              <app-portfolio-asset\n                *ngFor=\"let item of portfolio.shares\"\n                [id]=\"item.company.id\"\n                [name]=\"item.company.name\"\n                [symbol]=\"item.company.symbol\"\n                [logoUrl]=\"item.company.logo_url\"\n                [price]=\"item.company.price\"\n                [quantity]=\"item.quantity\"\n                [amount]=\"item.amount\"\n                type=\"share\"></app-portfolio-asset>\n          </div>\n\n          <div *ngIf=\"!portfolio || portfolio.shares.length <= 0\" class=\"assets-wrapper\">\n              No shares acquired,\n              <a routerLink=\"transactions/buy\" routerLinkActive=\"active\">\n                click here for a new investment\n              </a>\n          </div>\n        </mat-tab>\n\n        <mat-tab label=\"Cryptocurrencies\">\n\n          <div *ngIf=\"portfolio?.cryptocurrency.length > 0\" class=\"assets-wrapper\">\n            <app-portfolio-asset\n              *ngFor=\"let item of portfolio.cryptocurrency\"\n              [id]=\"item.cryptocurrency.id\"\n              [name]=\"item.cryptocurrency.name\"\n              [symbol]=\"item.cryptocurrency.symbol\"\n              [logoUrl]=\"item.cryptocurrency.logo_url\"\n              [price]=\"item.cryptocurrency.price\"\n              [quantity]=\"item.quantity\"\n              [amount]=\"item.amount\"\n              type=\"cryptocurrency\"></app-portfolio-asset>\n          </div>\n\n          <div *ngIf=\"!portfolio || portfolio.cryptocurrency.length <= 0\" class=\"assets-wrapper\">\n            No cryptocurrencies acquired,\n            <a routerLink=\"transactions/buy\" routerLinkActive=\"active\">\n              click here for a new investment\n            </a>\n        </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n\n    <div *ngIf=\"processing\" class=\"process\">\n      <mat-progress-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from '../../../../core/services/auth.service';\nimport { NotificationService } from '../../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public form: FormGroup;\n  protected navigateTo: string;\n  public processing: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.buildForm();\n    this.navigateTo = this.activatedRoute.snapshot.queryParamMap.get('to') || '/';\n\n    if (this.authService.isLoggedIn()) {\n      this.authService.logout();\n    }\n  }\n\n  login() {\n    if (this.form.valid) {\n      this.processing = true;\n\n      this.authService.login(\n        this.form.value.email,\n        this.form.value.password)\n        .subscribe(\n          success => this.handleSuccess(success),\n          error => this.handleError(error)\n        )\n    }\n  }\n\n  private handleSuccess(response) {\n    this.notificationService.notify(`Welcome, ${response.user.name.split(' ')[0]}`);\n    this.router.navigate([this.navigateTo]);\n  }\n\n  private handleError(response) {\n    this.processing = false;\n    let msg = response.error.message;\n    this.notificationService.notify(`An error has occurred: ${msg}`);\n  }\n\n  private buildForm(){\n    this.form = this.fb.group({\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [Validators.required])\n    });\n  }\n}\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <mat-card class=\"box\">\n    <mat-card-header *ngIf=\"!processing\">\n      <mat-card-title>\n        Log in\n      </mat-card-title>\n    </mat-card-header>\n\n    <form *ngIf=\"!processing\" [formGroup]=\"form\" (ngSubmit)=\"login()\" class=\"login-form\">\n      <mat-card-content>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            formControlName=\"email\"\n            placeholder=\"E-mail\">\n          <mat-error *ngIf=\"form.controls['email'].hasError('email') && !form.controls['email'].hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            formControlName=\"password\"\n            type=\"password\"\n            placeholder=\"Password\">\n          <mat-error *ngIf=\"form.controls['password'].hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </mat-card-content>\n      <button [disabled]=\"form.invalid\" mat-stroked-button class=\"btn-block\">Log in</button>\n    </form>\n\n    <div *ngIf=\"processing\" class=\"process text-center\">\n      <mat-progress-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </mat-card>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UsersService } from '../../../../core/services/users.service';\nimport { NotificationService } from '../../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public form: FormGroup;\n  public processing: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private usersService: UsersService,\n    private router: Router,\n    private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  submitForm() {\n    if (this.form.valid) {\n      this.processing = true;\n\n      this.usersService.store(\n        this.form.value.name,\n        this.form.value.email,\n        this.form.value.password)\n        .subscribe(\n          success => this.handleSuccess(success),\n          error => this.handleError(error)\n        )\n    }\n  }\n\n  private handleSuccess(response) {\n    this.notificationService.notify('Registration successful');\n    this.router.navigate(['/']);\n  }\n\n  private handleError(response) {\n    this.processing = false;\n    let msg = response.error.message;\n    this.notificationService.notify(`An error has occurred: ${msg}`);\n  }\n\n  private buildForm(){\n    this.form = this.fb.group({\n      name: this.fb.control('', [Validators.required]),\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      password: this.fb.control('', [Validators.required])\n    });\n  }\n}\n","<div class=\"register-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <mat-card class=\"box\">\n    <mat-card-header *ngIf=\"!processing\">\n      <mat-card-title>\n        Register\n      </mat-card-title>\n    </mat-card-header>\n\n    <form *ngIf=\"!processing\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\" class=\"register-form\">\n      <mat-card-content>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            formControlName=\"name\"\n            placeholder=\"Name\">\n          <mat-error *ngIf=\"form.controls['name'].hasError('required')\">\n            Name is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            formControlName=\"email\"\n            placeholder=\"E-mail\">\n          <mat-error *ngIf=\"form.controls['email'].hasError('email') && !form.controls['email'].hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"form.controls['email'].hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            formControlName=\"password\"\n            type=\"password\"\n            placeholder=\"Password\">\n          <mat-error *ngIf=\"form.controls['password'].hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </mat-card-content>\n      <button [disabled]=\"form.invalid\" mat-stroked-button class=\"btn-block\">Submit</button>\n    </form>\n\n    <div *ngIf=\"processing\" class=\"process text-center\">\n      <mat-progress-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </mat-card>\n\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { ConfirmationDialogComponent } from 'src/app/shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { TransactionsService } from 'src/app/core/services/transactions.service';\nimport { NotificationService } from 'src/app/core/services/notification.service';\n\n@Component({\n  selector: 'app-investment-asset',\n  templateUrl: './investment-asset.component.html',\n  styleUrls: ['./investment-asset.component.css']\n})\nexport class InvestmentAssetComponent implements OnInit {\n\n  @Input()\n  id: string;\n\n  @Input()\n  name: string;\n\n  @Input()\n  logoUrl: string;\n\n  @Input()\n  symbol: string;\n\n  @Input()\n  description: string;\n\n  @Input()\n  price: number;\n\n  @Input()\n  amount: number;\n\n  @Input()\n  type: 'share' | 'cryptocurrency';\n\n\n  processing: boolean = false;\n  showDescription: boolean = false;\n\n  constructor(\n    private transactionsService: TransactionsService,\n    private router: Router,\n    private notificationService: NotificationService,\n    private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  onBuy() {\n    if(this.processing){\n      return;\n    }\n\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: '350px',\n      data: \"Do you confirm the purchase?\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.processing = true;\n        if(this.type === 'share') {\n          this.buyShares();\n        } else {\n          this.buyCurrencies();\n        }\n      }\n    });\n  }\n\n  buyShares() {\n    this.transactionsService.buyShares(this.id, this.amount).subscribe(\n      success => this.handleSuccess(success),\n      error => this.handleError(error),\n    );\n  }\n\n  buyCurrencies(){\n    this.transactionsService.buyCryptocurrencies(this.id, this.amount).subscribe(\n      success => this.handleSuccess(success),\n      error => this.handleError(error),\n    );\n  }\n\n  private handleSuccess(response) {\n    this.notificationService.notify('Successful transaction');\n    this.router.navigate(['/']);\n  }\n\n  private handleError(response) {\n    this.processing = false;\n    let msg = response.error.message;\n    this.notificationService.notify(`An error has occurred: ${msg}`);\n  }\n\n  toggleShowDescription() {\n    this.showDescription = !this.showDescription;\n  }\n}\n","<div class=\"asset-wrapper\">\n  <div class=\"asset-content\">\n    <div class=\"asset-image-wrapper\">\n      <img class=\"asset-logo\" src=\"{{ logoUrl }}\">\n    </div>\n\n    <div class=\"asset-info-wrapper\">\n      <span class=\"asset-name\"><strong>{{ name }}</strong> ({{ symbol }})</span>\n\n      <div class=\"asset-info\">\n        <strong>Price:</strong>&nbsp;<span class=\"asset-price\">{{ price | currency }}</span><br>\n        <strong>Quantity:</strong>&nbsp;<span class=\"asset-price\">{{ (amount / price) | number: '1.4-4' }}</span>\n      </div>\n\n      <span *ngIf=\"showDescription\" class=\"asset-description\">\n        {{ description }}\n      </span>\n    </div>\n  </div>\n\n  <div class=\"asset-actions\">\n    <button (click)=\"toggleShowDescription()\" mat-button>\n      <mat-icon>{{ showDescription ? 'clear' : 'info' }}</mat-icon>&nbsp;\n      <span>{{ showDescription ? 'Close information' : 'More information' }}</span>\n    </button>\n    &nbsp;\n    <button (click)=\"onBuy()\" mat-raised-button color=\"primary\">\n      <mat-icon *ngIf=\"!processing\">payments</mat-icon>&nbsp;\n      <span>{{ processing ? 'Processing...' : 'Buy' }}</span>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ConfirmationDialogComponent } from 'src/app/shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { CompaniesService } from 'src/app/core/services/companies.service';\nimport { CryptocurrenciesService } from 'src/app/core/services/cryptocurrencies.service';\nimport { NotificationService } from 'src/app/core/services/notification.service';\n\nimport CompanyModel from 'src/app/shared/models/company.model';\nimport CryptocurrencyModel from 'src/app/shared/models/cryptocurrency.model';\n\n@Component({\n  selector: 'app-new-transaction',\n  templateUrl: './new-transaction.component.html',\n  styleUrls: ['./new-transaction.component.css']\n})\nexport class NewTransactionComponent implements OnInit {\n\n  public form: FormGroup;\n  public processing: boolean = false;\n\n  public amount: number = undefined;\n  public companies: CompanyModel[] = undefined;\n  public currencies: CryptocurrencyModel[] = undefined;\n\n  constructor(\n    private fb: FormBuilder,\n    private companiesServices: CompaniesService,\n    private cryptocurrenciesService: CryptocurrenciesService,\n    private notificationService: NotificationService,\n    private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  submitForm() {\n    if (this.form.valid) {\n      this.processing = true;\n\n      this.amount = this.form.value.amount;\n\n      this.loadCompanies();\n    }\n  }\n\n  loadCompanies() {\n    this.companiesServices.all()\n      .subscribe(\n        response => {\n          this.companies = response;\n          this.loadCryptocurrencies();\n        },\n        error => this.handleError(error)\n      );\n  }\n\n  loadCryptocurrencies() {\n    this.cryptocurrenciesService.all()\n      .subscribe(\n        response => {\n          this.currencies = response;\n          this.processing = false;\n        },\n        error => this.handleError(error)\n      );\n  }\n\n  private handleError(response) {\n    this.processing = false;\n    let msg = response.error.message;\n    this.notificationService.notify(`An error has occurred: ${msg}`);\n  }\n\n  onReset(){\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: '350px',\n      data: \"Do you confirm the reset?\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.buildForm();\n        this.amount = undefined;\n      }\n    });\n  }\n\n  private buildForm(){\n    this.form = this.fb.group({\n      amount: this.fb.control('', [Validators.required]),\n    });\n  }\n}\n","<mat-card class=\"content-card content-card-with-actions\">\n  <mat-card-header fxLayoutAlign=\"space-between\">\n    <div mat-card-avatar class=\"avatar\">\n      <mat-icon>attach_money</mat-icon>\n    </div>\n    <div fxFlex=\"grow\">\n      <mat-card-title>New Investment</mat-card-title>\n      <mat-card-subtitle>Find a opportunity and make a good deal</mat-card-subtitle>\n    </div>\n\n    <div>\n      <button *ngIf=\"amount\" mat-button (click)=\"onReset()\">\n        <mat-icon>clear</mat-icon>\n        <span>Reset</span>\n      </button>\n    </div>\n  </mat-card-header>\n  <mat-card-content>\n    <form *ngIf=\"!processing && !amount\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\" class=\"form\">\n      <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            formControlName=\"amount\"\n            type=\"number\"\n            min=\"1\"\n            placeholder=\"Amount (USD)\">\n          <mat-error *ngIf=\"form.controls['amount'].hasError('required')\">\n            Amount is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      <button [disabled]=\"form.invalid\" mat-stroked-button class=\"btn-block full-width\">Search assets</button>\n    </form>\n\n    <div *ngIf=\"!processing && amount\" class=\"content\">\n\n      <div class=\"amount-investment\">\n        Amount: {{ amount | currency }}\n      </div>\n\n      <mat-tab-group mat-align-tabs=\"start\">\n\n        <mat-tab label=\"Shares\">\n          <div class=\"assets-wrapper\">\n              <app-investment-asset\n                *ngFor=\"let item of companies\"\n                [id]=\"item.id\"\n                [name]=\"item.name\"\n                [symbol]=\"item.symbol\"\n                [logoUrl]=\"item.logo_url\"\n                [description]=\"item.description\"\n                [price]=\"item.price\"\n                [amount]=\"amount\"\n                type=\"share\"></app-investment-asset>\n          </div>\n        </mat-tab>\n\n        <mat-tab label=\"Cryptocurrencies\">\n\n          <div class=\"assets-wrapper\">\n            <app-investment-asset\n              *ngFor=\"let item of currencies\"\n              [id]=\"item.id\"\n              [name]=\"item.name\"\n              [symbol]=\"item.symbol\"\n              [logoUrl]=\"item.logo_url\"\n              [description]=\"item.description\"\n              [price]=\"item.price\"\n              [amount]=\"amount\"\n              type=\"cryptocurrency\"></app-investment-asset>\n        </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n\n    <div *ngIf=\"processing\" class=\"process\">\n      <mat-progress-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatCardModule} from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatTabsModule,\n  ],\n  exports: [\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatTabsModule,\n  ],\n  providers: [\n    MatDatepickerModule,\n  ],\n  declarations: []\n})\nexport class AngularMaterialModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public message: string) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-content>\n  {{ message }}\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>&nbsp;\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\" cdkFocusInitial>Ok</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxFlex=\"grow\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"content-wrapper\">\n  <div class=\"content-card\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  isLoggedIn() {\n    return !!this.authService.user()\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"app-header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"header-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div class=\"logo-header\">\n      <a [routerLink]=\"['/']\" class=\"positronx\">\n        <img src=\"../assets/images/white-logo.png\">\n      </a>\n    </div>\n\n    <div *ngIf=\"isLoggedIn()\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item routerLink=\"/\" routerLinkActive=\"active\">\n          <mat-icon>account_balance_wallet</mat-icon>\n          <span>Investment Portfolio</span>\n        </button>\n        <button mat-menu-item routerLink=\"transactions/buy\" routerLinkActive=\"active\">\n          <mat-icon>attach_money</mat-icon>\n          <span>New Investment</span>\n        </button>\n        <button mat-menu-item routerLink=\"logout\" routerLinkActive=\"active\">\n          <mat-icon>exit_to_app</mat-icon>\n          <span>Logout</span>\n        </button>\n      </mat-menu>\n    </div>\n\n    <div *ngIf=\"!isLoggedIn()\" class=\"nav-tool-items\">\n      <a mat-button routerLink=\"login\" routerLinkActive=\"active\">Log in</a>\n      <a mat-button mat-raised-button routerLink=\"register\" routerLinkActive=\"active\">Register</a>\n    </div>\n  </div>\n</mat-toolbar>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:3333/api',\n  web: 'http://localhost:3333'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}